name: Build and Release Service

on:
  push:
    branches:
      - main

jobs:
  build_push:
    runs-on: ubuntu-latest
    steps:

    # Check out the code
    - name: Checkout
      uses: actions/checkout@v2

    # Build and tag docker container
    - name: Build Container
      env:
        REGISTRY: registry.digitalocean.com/tallii
        REPOSITORY: tallii-platform
        IMAGE_TAG: ${{ github.sha }}
      run: docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f Dockerfile.release .

    # Configure the DO credentials
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    # Use doctl to login to docker registry
    - name: Log in to DigitalOcean Container Registry
      run: doctl registry login --expiry-seconds 600
    
    # Build docker container
    - name: Push to Registry
      env:
        REGISTRY: registry.digitalocean.com/tallii
        REPOSITORY: tallii-platform
        IMAGE_TAG: ${{ github.sha }}
      run: docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    
    # # Update deployment file
    # - name: Update deployment file
    #   run: TAG=$(echo $GITHUB_SHA) && sed -i 's|<IMAGE>|registry.digitalocean.com/tallii/tallii-auth:'${TAG}'|' $GITHUB_WORKSPACE/kubernetes/deployment.yaml
    
    # # Get cluster config
    # - name: Save DigitalOcean kubeconfig with short-lived credentials
    #   run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-tor1-tallii
    
    # # Run the deployment
    # - name: Deploy to DigitalOcean Kubernetes
    #   run: kubectl apply -f $GITHUB_WORKSPACE/kubernetes/deployment.yaml

    # # Verify the pod is running
    # - name: Verify deployment
    #   run: kubectl rollout status deployment/tallii-auth
